{"version":3,"sources":["SimpleTable.js","Content.js","ComponentToPrint.js","FormDesign.js","App.js","reportWebVitals.js","index.js"],"names":["SimpleTable","props","className","clientRecords","map","record","commission","comm","roomRate","confmNo","nights","checkin","checkout","name","align","thousandSpacing","value","displayType","thousandSeparator","suffix","toFixed","Content","totalPrice","reduce","sum","tds","data","hotelName","hotelAddress","invoiceNo","date","style","fontSize","ComponentToPrint","state","showBill","this","React","PureComponent","useStyles","makeStyles","theme","root","margin","spacing","width","FormDesign","componentRef","useRef","handlePrint","useReactToPrint","content","current","classes","useState","clientRecord","changeClientRecord","changeClientRecords","changeData","provideData","changeProvideData","finalClientRecords","changeFinalClientRecords","changeShowBill","updateClient","event","target","prevValue","inputData","onSubmit","preventDefault","alert","prevData","noValidate","autoComplete","TextField","type","label","error","required","id","placeholder","onChange","Button","variant","color","onClick","window","location","reload","marginLeft","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fe35c0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Content.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst SimpleTable = (props) => {\r\n    return <table className=\"client_records\">\r\n        <tr>\r\n            <th>Confm No.</th>\r\n            <th>No of <br /> Nights</th>\r\n            <th>Check In</th>\r\n            <th>Check Out</th>\r\n            <th>Guest's Name</th>\r\n            <th>Room Rate</th>\r\n            <th>% Comm</th>\r\n            <th>Net Payable <br /> per night</th>\r\n            <th>Net Payable (INR)</th>\r\n        </tr>\r\n        {props.clientRecords?.map(record => {\r\n            let commission = (record.comm / 100) * record.roomRate;\r\n            return (\r\n                <tr key={record.confmNo}>\r\n                    <td>{record.confmNo}</td>\r\n                    <td>{record.nights}</td>\r\n                    <td>{record.checkin}</td>\r\n                    <td>{record.checkout}</td>\r\n                    <td>{record.name}</td>\r\n                    <td align=\"right\">{<CurrencyFormat thousandSpacing=\"2s\" value={record.roomRate} displayType={'text'} thousandSeparator={true} suffix={'/-'} />}</td>\r\n                    <td align=\"right\">{record.comm}%</td>\r\n                    <td align=\"right\"><CurrencyFormat thousandSpacing=\"2s\" value={commission.toFixed(2)} displayType={'text'} thousandSeparator={true} suffix={'/-'} /></td>\r\n                    <td align=\"right\"><CurrencyFormat thousandSpacing=\"2s\" value={(commission * record.nights).toFixed(2)} displayType={'text'} thousandSeparator={true} suffix={'/-'} /></td>\r\n                </tr>\r\n            )\r\n        })}\r\n    </table>\r\n}\r\n\r\nexport default SimpleTable;","import React from \"react\";\r\nimport \"./Content.css\"\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst Content = (props) => {\r\n    let totalPrice = props.clientRecords.reduce((sum, record) => {\r\n        let commission = (record.comm / 100) * record.roomRate;\r\n        let totalPrice = commission * record.nights;\r\n        return sum + totalPrice\r\n    }, 0);\r\n    let tds = (0.05 * totalPrice).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"topData\">\r\n                <div className=\"leftdata\">\r\n                    <p>To</p>\r\n                    <div className=\"hotelname\">\r\n                        <p>{props.data.hotelName}</p>\r\n                        <p>{props.data.hotelAddress}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rightData\">\r\n                    <br />\r\n                    <div className=\"tabrow\">\r\n                        <p className=\"label\">INVOICE NO </p>\r\n                        <p> : {props.data.invoiceNo}</p>\r\n                    </div>\r\n                    <div className=\"tabrow\">\r\n                        <p className=\"label\">DATE</p>\r\n                        <p> : {props.data.date}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <SimpleTable clientRecords={props.clientRecords} />\r\n            <div className=\"totalrow\">\r\n                <p>Total: &nbsp;</p>\r\n                <p className=\"rightamount\">INR   {<CurrencyFormat thousandSpacing=\"2s\" value={totalPrice.toFixed(2)} displayType={'text'} thousandSeparator={true} suffix={'/-'} />}</p>\r\n            </div>\r\n            <div className=\"totalrow\">\r\n                <p>TDS @ 5% ON GROSS COMMISSION: &nbsp;</p>\r\n                <p className=\"rightamount\">INR   {<CurrencyFormat thousandSpacing=\"2s\" value={tds} displayType={'text'} thousandSeparator={true} suffix={'/-'} />}</p>\r\n            </div>\r\n            <div className=\"totalrow\">\r\n                <p className=\"amountlabel\">NETT PAYABLE AMOUNT &nbsp;</p>\r\n                <p className=\"finalAmount\">INR   {<CurrencyFormat value={(totalPrice - tds).toFixed(2)} thousandSpacing=\"2s\" displayType={'text'} thousandSeparator={true} suffix={'/-'} />}</p>\r\n            </div>\r\n\r\n            <div className=\"closuredetails\">\r\n                <div className=\"closurerow\">\r\n                    <p>PAN NO.</p>\r\n                    <p className=\"panrow\">AAKJ0034F</p>\r\n                </div>\r\n                <div className=\"closurerow\" style={{ fontSize: \"12px\" }}>\r\n                    <p>NOTE:</p>\r\n                    <p className=\"panrow\">CHEQUE TO BE MADE IN THE NAME OF <u>JKM TRAVELS</u></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from \"react\";\r\nimport \"./ComponentToPrint.css\"\r\nimport Content from \"./Content\";\r\n\r\nclass ComponentToPrint extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data,\r\n            showBill: false,\r\n            clientRecords: props.clientRecords\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"system\">\r\n                <div className=\"Company\">JKM Travels</div>\r\n                <div className=\"header_bottom\" />\r\n\r\n                <div className=\"mainContent\">\r\n                    <h4 className=\"commission\">TRAVEL AGENT COMMISSION INVOICE</h4>\r\n                    <Content data={this.state.data} clientRecords={this.state.clientRecords} />\r\n                </div>\r\n                <footer className=\"footer\">\r\n                    <p>75, Sukh Vihar, Delhi 110 051 #9999134484</p>\r\n                    <p>Email : resvn@jkmtravel.co.in</p>\r\n                </footer>\r\n            </div>\r\n            // <table>\r\n            //   <thead>\r\n            //     <th>column 1</th>\r\n            //     <th>column 2</th>\r\n            //     <th>column 3</th>\r\n            //   </thead>\r\n            //   <tbody>\r\n            //     <tr>\r\n            //       <td>data 1</td>\r\n            //       <td>data 2</td>\r\n            //       <td>data 3</td>\r\n            //     </tr>\r\n            //   </tbody>\r\n            // </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComponentToPrint;","import React, { useState, useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport ComponentToPrint from \"./ComponentToPrint\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./FormDesign.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function FormDesign() {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n    const classes = useStyles();\r\n\r\n    let [clientRecord, changeClientRecord] = useState({\r\n        confmNo: \"\",\r\n        nights: \"\",\r\n        checkin: \"\",\r\n        checkout: \"\",\r\n        name: \"\",\r\n        roomRate: \"\",\r\n        comm: \"\"\r\n    })\r\n\r\n    let [clientRecords, changeClientRecords] = useState([]);\r\n\r\n    const [data, changeData] = useState({\r\n        invoiceNo: \"\",\r\n        hotelName: \"\",\r\n        hotelAddress: \"\",\r\n        date: \"\"\r\n    });\r\n\r\n    const [provideData, changeProvideData] = useState({});\r\n    const [finalClientRecords, changeFinalClientRecords] = useState([]);\r\n\r\n    const [showBill, changeShowBill] = useState(false);\r\n\r\n    const submitData = event => {\r\n        event.preventDefault();\r\n\r\n        if (data.invoiceNo === \"\" || data.hotelName === \"\" || data.hotelAddress === \"\" || data.date === \"\") {\r\n            alert(\"Please fill the required fields.\");\r\n        } else {\r\n            changeShowBill(true);\r\n            changeProvideData(data);\r\n            changeFinalClientRecords(clientRecords);\r\n\r\n            changeClientRecords([]);\r\n            changeData({\r\n                invoiceNo: \"\",\r\n                hotelName: \"\",\r\n                hotelAddress: \"\",\r\n                date: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const addClientData = event => {\r\n        event.preventDefault();\r\n\r\n        if (clientRecord.confmNo === \"\" ||\r\n            clientRecord.nights === \"\" ||\r\n            clientRecord.checkin === \"\" ||\r\n            clientRecord.checkout === \"\" ||\r\n            clientRecord.name === \"\" ||\r\n            clientRecord.roomRate === \"\" ||\r\n            clientRecord.comm === \"\") {\r\n            alert(\"Please fill all the client details.\")\r\n        }\r\n        else {\r\n            changeClientRecords((prevData) => [...prevData, clientRecord]);\r\n            changeClientRecord({\r\n                confmNo: \"\",\r\n                nights: \"\",\r\n                checkin: \"\",\r\n                checkout: \"\",\r\n                name: \"\",\r\n                roomRate: \"\",\r\n                comm: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateClient = event => {\r\n        const { name, value } = event.target;\r\n        changeClientRecord((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const inputData = (event) => {\r\n        const { name, value } = event.target;\r\n        changeData((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const getComponent = () => {\r\n        if (showBill) {\r\n            return <><ComponentToPrint data={provideData} clientRecords={finalClientRecords} ref={componentRef} />\r\n                <div className=\"addClientButton\">\r\n                    <Button onClick={handlePrint} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Print/Save\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        style={{ marginLeft: \"14px\" }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\">\r\n                        Refresh\r\n                </Button></div></>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Company\">JKM Travels Invoice Generator</div>\r\n            <form onSubmit={addClientData} className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className=\"designForm\">\r\n                    <div className=\"centerDetailsLabel\">Client details:</div>\r\n                    <div className=\"designClientData\">\r\n                        <div>\r\n                            <TextField type=\"text\"\r\n                                label=\"Confirmation Number\"\r\n                                error={clientRecord.confmNo === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Confirmation Number\"\r\n                                onChange={updateClient}\r\n                                name=\"confmNo\"\r\n                                value={clientRecord.confmNo} />\r\n                            <br />\r\n                            <TextField type=\"text\"\r\n                                label=\"Client Name\"\r\n                                error={clientRecord.name === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Client Name\"\r\n                                onChange={updateClient}\r\n                                name=\"name\"\r\n                                value={clientRecord.name} />\r\n                            <br />\r\n                            <TextField type=\"text\"\r\n                                label=\"No. of nights\"\r\n                                error={clientRecord.nights === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Number of nights\"\r\n                                onChange={updateClient}\r\n                                name=\"nights\"\r\n                                value={clientRecord.nights} />\r\n                            <br />\r\n                            <TextField\r\n                                label=\"Room Rate\"\r\n                                error={clientRecord.roomRate === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                type=\"text\"\r\n                                placeholder=\"Room rate\"\r\n                                onChange={updateClient}\r\n                                name=\"roomRate\"\r\n                                value={clientRecord.roomRate} />\r\n                            <br />\r\n                            <TextField\r\n                                label=\"Check-in date\"\r\n                                error={clientRecord.checkin === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                type=\"text\"\r\n                                placeholder=\"Check0In date\"\r\n                                onChange={updateClient}\r\n                                name=\"checkin\"\r\n                                value={clientRecord.checkin} />\r\n                            <br />\r\n                            <TextField\r\n                                label=\"Check-out date\"\r\n                                error={clientRecord.checkin === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                type=\"text\"\r\n                                placeholder=\"Check-out date\"\r\n                                onChange={updateClient}\r\n                                name=\"checkout\"\r\n                                value={clientRecord.checkout} />\r\n                            <br />\r\n                            <TextField\r\n                                label=\"Commission in percent\"\r\n                                error={clientRecord.comm === \"\" ? true : false}\r\n                                required\r\n                                id=\"standard-required\"\r\n                                type=\"text\"\r\n                                placeholder=\"Commission in percentage\"\r\n                                onChange={updateClient}\r\n                                name=\"comm\"\r\n                                value={clientRecord.comm} />\r\n                            <br />\r\n\r\n                            <div className=\"addClientButton\">\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                                    Add client\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div>-----------------------------------------------------------</div>\r\n\r\n            <div className=\"clientRecords\">\r\n                <p>Client Records added:</p>\r\n                <SimpleTable className=\"tableClient\" clientRecords={clientRecords} />\r\n            </div>\r\n\r\n            <div>-----------------------------------------------------------</div>\r\n\r\n            <form onSubmit={submitData} className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className=\"designForm\">\r\n                    <div className=\"centerDetailsLabel\">Basic Details:</div>\r\n                    <TextField\r\n                        label=\"Hotel Name\"\r\n                        error={data.hotelName === \"\" ? true : false}\r\n                        required\r\n                        id=\"standard-required\"\r\n                        type=\"text\"\r\n                        placeholder=\"Hotel Name\"\r\n                        onChange={inputData}\r\n                        name=\"hotelName\"\r\n                        value={data.hotelName} />\r\n                    <br />\r\n                    <TextField\r\n                        required\r\n                        label=\"Hotel Address\"\r\n                        error={data.hotelAddress === \"\" ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Hotel Address\"\r\n                        onChange={inputData}\r\n                        name=\"hotelAddress\"\r\n                        value={data.hotelAddress} />\r\n                    <br />\r\n                    <TextField\r\n                        label=\"Invoice Number\"\r\n                        required\r\n                        error={data.invoiceNo === \"\" ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Invoice Number\"\r\n                        onChange={inputData}\r\n                        name=\"invoiceNo\"\r\n                        value={data.invoiceNo} />\r\n                    <br />\r\n                    <TextField\r\n                        label=\"Date\"\r\n                        required\r\n                        error={data.date === \"\" ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Date\"\r\n                        onChange={inputData}\r\n                        name=\"date\"\r\n                        value={data.date} />\r\n                    <br />\r\n                </div>\r\n                <div className=\"addClientButton\">\r\n                    <Button className=\"addClientButton\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Submit\r\n                </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        style={{ marginLeft: \"14px\" }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\">\r\n                        Refresh\r\n                </Button>\r\n                </div>\r\n\r\n            </form>\r\n            {getComponent()}\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport FormDesign from \"./FormDesign\";\n\nconst App = () => {\n\n  return (\n    <FormDesign />\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}